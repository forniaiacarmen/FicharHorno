package com.example.ficharhorno;

import android.Manifest;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.net.ConnectivityManager;
import android.net.Network;
import android.net.NetworkCapabilities;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private static final String WIFI_NAME = "MIWIFI_04D8";
    private static final String PREFS_NAME = "FichajePrefs";
    private static final String USERNAME_KEY = "username";

    private EditText editTextUsername;
    private Button btnFichar;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Verificar permisos de ubicaci칩n
//        if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
//            requestPermissions(new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 1);
//        }

        // Obtener el nombre de la red WiFi conectada
        String connectedNetworkName = getConnectedWifiSSID();
        Toast.makeText(this, "Red actual: " + connectedNetworkName, Toast.LENGTH_LONG).show();




        // Inicializar vistas
        editTextUsername = findViewById(R.id.editTextUsername);
        btnFichar = findViewById(R.id.btnFichar);

        // Verificar si estamos conectados a la red WiFi correcta
        if (!connectedNetworkName.equals(WIFI_NAME)) {
            Toast.makeText(this, "No est치s conectado a la red " + WIFI_NAME, Toast.LENGTH_LONG).show();
            return;
        }

        // Cargar el nombre del usuario si est치 guardado
        SharedPreferences sharedPreferences = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
        String savedUsername = sharedPreferences.getString(USERNAME_KEY, null);

        if (savedUsername != null) {
            editTextUsername.setText(savedUsername);
            editTextUsername.setEnabled(false);
        }

        // Configurar el bot칩n de fichaje
        btnFichar.setOnClickListener(v -> {
            String username = editTextUsername.getText().toString();
            if (username.isEmpty()) {
                Toast.makeText(MainActivity.this, "Por favor, introduce tu nombre.", Toast.LENGTH_SHORT).show();
            } else {
                SharedPreferences.Editor editor = sharedPreferences.edit();
                editor.putString(USERNAME_KEY, username);
                editor.apply();
                Toast.makeText(MainActivity.this, "Fichaje registrado para: " + username, Toast.LENGTH_SHORT).show();
            }
        });
    }

    private String getConnectedWifiSSID() {
        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        Network network = connectivityManager.getActiveNetwork();
        NetworkCapabilities networkCapabilities = connectivityManager.getNetworkCapabilities(network);

        if (networkCapabilities != null && networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI)) {
            WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
            WifiInfo wifiInfo = wifiManager.getConnectionInfo();
            return wifiInfo.getSSID().replaceAll("\"", "");
        }

        return "<unknown ssid>";
    }
}
